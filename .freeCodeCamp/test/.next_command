builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
ls --color=auto a-l
ls --color=auto -al
echo hello PostgreSQL
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
ls --color=auto -al
ls --color=auto .freeCodeCamp/
cd .freeCodeCamp/
ls --color=auto
cat postgresql.conf
__vsc_prompt_cmd_original
ls --color=auto
cat test/
ls --color=auto test/
ls --color=auto
cd ..
ls --color=auto
ls --color=auto -al
cat .gitpod.yml
__vsc_prompt_cmd_original
clear
ls --color=auto
cat .gitignore
psql --username=freecodecamp --dbname=postgres
ls --color=auto
code dumpDatabase.sh
chmod +x dumpDatabase.sh
git remote -v
git remote -d
git remote remove origin
git remote -v
ls --color=auto
echo "# mario4" >> README.md
pg_dump -cC --inserts -U freecodecamp first_database > first_database.sql
ls --color=auto -a
git branch
git remote -v
git remote add origin https://github.com/ebharrison/mario4.git
git push
git push --set-upstream origin main
ls --color=auto
git remote -v
ls --color=auto -al
rm -rf .git
git status
git remote add
git remote add coderoad https://github.com/freeCodeCamp/learn-relational-databases-by-building-a-mario-database
./dumpDatabase.sh
git status
git push origin master
./dumpDatabase.sh
ls --color=auto
code rebuildDatabase.sh
chmod +x rebuildDatabase.sh
./rebuildDatabase.sh
./dumpDatabase.sh
ls --color=auto
./rebuildDatabase.sh
ls --color=auto
./rebuildDatabase.sh
./dumpDatabase.sh
./rebuildDatabase.sh
./rebuildDatabase.sh
code dumpDatabase.sh
code rebuildDatabase.sh
./rebuildDatabase.sh
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
./dumpDatabase.sh
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
./dumpDatabase.sh
./dumpDatabase.sh
./dumpDatabase.sh
./dumpDatabase.sh
./dumpDatabase.sh
./dumpDatabase.sh
./dumpDatabase.sh
./dumpDatabase.sh
./dumpDatabase.sh
./rebuildDatabase.sh
./dumpDatabase.sh
